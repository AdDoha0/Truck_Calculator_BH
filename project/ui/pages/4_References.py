import streamlit as st
import pandas as pd
from ui_utils import inject_styles, sidebar_content
from db_utils import (
    init_database,
    create_truck,
    get_all_trucks, 
    get_truck_by_id,
    update_truck,
    delete_truck
)

st.set_page_config(page_title="–°–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏ ‚Ä¢ BH Trans", page_icon="üìö", layout="wide")
inject_styles()
sidebar_content()

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ë–î
init_database()

st.header("üìö –°–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏ –∏ —Å–µ—Ä–≤–∏—Å–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã")

T1, T2, T3 = st.tabs(["üöõ –¢—Ä–∞–∫–∏", "üìÖ –ü–µ—Ä–∏–æ–¥—ã", "üìã –õ–æ–≥–∏"]) 

with T1:
    st.subheader("–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç—Ä–∞–∫–∞–º–∏")
    
    # ========== –î–û–ë–ê–í–õ–ï–ù–ò–ï –ù–û–í–û–ì–û –¢–†–ê–ö–ê ==========
    st.markdown("### ‚ûï –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π —Ç—Ä–∞–∫")
    
    with st.form("add_truck_form"):
        new_tractor_no = st.text_input(
            "–ù–æ–º–µ—Ä —Ç—Ä–∞–∫–∞",
            placeholder="–Ω–∞–ø—Ä–∏–º–µ—Ä: 1740, ABC123, TR001",
            help="–£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Ç—Ä–∞–∫–∞"
        )
        submit_add = st.form_submit_button("‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ç—Ä–∞–∫", type="primary")
        
        if submit_add:
            if new_tractor_no:
                create_truck(new_tractor_no)
                st.rerun()
            else:
                st.error("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç—Ä–∞–∫–∞!")
    
    st.divider()
    
    # ========== –°–ü–ò–°–û–ö –¢–†–ê–ö–û–í ==========
    st.markdown("### üìã –°–ø–∏—Å–æ–∫ —Ç—Ä–∞–∫–æ–≤")
    
    trucks = get_all_trucks()
    
    if not trucks:
        st.info("üì≠ –¢—Ä–∞–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–≤—ã–π —Ç—Ä–∞–∫ –≤—ã—à–µ.")
    else:
        # –°–æ–∑–¥–∞–µ–º DataFrame –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
        df = pd.DataFrame(trucks)
        df = df.rename(columns={
            "id": "ID",
            "tractor_no": "–ù–æ–º–µ—Ä —Ç—Ä–∞–∫–∞",
            "monthly_rows_count": "–ú–µ—Å—è—á–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π",
            "fixed_costs_count": "–§–∏–∫—Å. —Ä–∞—Å—Ö–æ–¥–æ–≤"
        })
        
        # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –≤—ã–±–æ—Ä–∞
        st.dataframe(
            df,
            use_container_width=True,
            hide_index=True,
            column_config={
                "ID": st.column_config.NumberColumn("ID", width="small"),
                "–ù–æ–º–µ—Ä —Ç—Ä–∞–∫–∞": st.column_config.TextColumn("–ù–æ–º–µ—Ä —Ç—Ä–∞–∫–∞", width="medium"),
                "–ú–µ—Å—è—á–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π": st.column_config.NumberColumn("–ú–µ—Å—è—á–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π", width="small"),
                "–§–∏–∫—Å. —Ä–∞—Å—Ö–æ–¥–æ–≤": st.column_config.NumberColumn("–§–∏–∫—Å. —Ä–∞—Å—Ö–æ–¥–æ–≤", width="small")
            }
        )
        
        st.markdown(f"**–í—Å–µ–≥–æ —Ç—Ä–∞–∫–æ–≤:** {len(trucks)}")
        
        # ========== –†–ï–î–ê–ö–¢–ò–†–û–í–ê–ù–ò–ï/–£–î–ê–õ–ï–ù–ò–ï ==========
        st.markdown("### ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å/–£–¥–∞–ª–∏—Ç—å —Ç—Ä–∞–∫")
        
        truck_options = {f"{truck['tractor_no']} (ID: {truck['id']})": truck['id'] 
                        for truck in trucks}
        
        selected_truck_label = st.selectbox(
            "–í—ã–±–µ—Ä–∏—Ç–µ —Ç—Ä–∞–∫ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è",
            options=list(truck_options.keys()),
            help="–í—ã–±–µ—Ä–∏—Ç–µ —Ç—Ä–∞–∫ –∏–∑ —Å–ø–∏—Å–∫–∞"
        )
        
        if selected_truck_label:
            selected_truck_id = truck_options[selected_truck_label]
            truck_data = get_truck_by_id(selected_truck_id)
            
            if truck_data:
                col1, col2 = st.columns([2, 1])
                
                with col1:
                    # –§–æ—Ä–º–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
                    with st.form(f"edit_truck_form_{selected_truck_id}"):
                        st.write(f"**–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç—Ä–∞–∫–∞ ID: {truck_data['id']}**")
                        
                        new_tractor_no = st.text_input(
                            "–ù–æ–≤—ã–π –Ω–æ–º–µ—Ä —Ç—Ä–∞–∫–∞",
                            value=truck_data['tractor_no'],
                            help="–ò–∑–º–µ–Ω–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç—Ä–∞–∫–∞"
                        )
                        
                        submit_edit = st.form_submit_button("üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è", type="primary")
                        
                        if submit_edit:
                            if new_tractor_no:
                                if update_truck(selected_truck_id, new_tractor_no):
                                    st.rerun()
                            else:
                                st.error("–ù–æ–º–µ—Ä —Ç—Ä–∞–∫–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º!")
                
                with col2:
                    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∏ —É–¥–∞–ª–µ–Ω–∏–µ
                    st.markdown("**–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:**")
                    st.write(f"‚Ä¢ –ú–µ—Å—è—á–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π: {truck_data['monthly_rows_count']}")
                    st.write(f"‚Ä¢ –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ä–∞—Å—Ö–æ–¥–æ–≤: {truck_data['fixed_costs_count']}")
                    
                    # –ö–Ω–æ–ø–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è
                    if truck_data['monthly_rows_count'] > 0:
                        st.warning("‚ö†Ô∏è –ù–µ–ª—å–∑—è —É–¥–∞–ª–∏—Ç—å —Ç—Ä–∞–∫ —Å –º–µ—Å—è—á–Ω—ã–º–∏ –∑–∞–ø–∏—Å—è–º–∏")
                    else:
                        if st.button("üóëÔ∏è –£–¥–∞–ª–∏—Ç—å —Ç—Ä–∞–∫", 
                                   key=f"delete_{selected_truck_id}",
                                   help="–ë–µ–∑–≤–æ–∑–≤—Ä–∞—Ç–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ —Ç—Ä–∞–∫–∞"):
                            if delete_truck(selected_truck_id):
                                st.rerun()

with T2:
    st.subheader("–ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –ø–µ—Ä–∏–æ–¥—ã (–¥–µ–º–æ)")
    st.info("üöß –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ª–æ–≥–∏–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤")
    st.dataframe(pd.DataFrame({
        "period_month": ["2025-07-01","2025-08-01","2025-09-01"],
        "files": ["5/5","4/5","2/5"],
        "status": ["complete","waiting salary","waiting fuel"]
    }))

with T3:
    st.subheader("–õ–æ–≥–∏ –æ–ø–µ—Ä–∞—Ü–∏–π (–¥–µ–º–æ)")
    st.info("üöß –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–æ –ø—Ä–∏ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤")
    st.code(
        """
2025-09-01 12:03  Uploaded fuel.xlsx (32 rows)
2025-09-01 12:05  Uploaded tolls.xlsx (16 rows)
2025-09-01 12:06  Uploaded repair.xlsx (5 rows)
2025-09-01 12:08  Uploaded salary.xlsx (31 rows)
2025-09-01 12:12  Uploaded gross.xlsx (32 rows)
2025-09-01 12:13  Upsert to monthly_revenue: 32 rows
2025-09-01 12:13  Upsert to variable_item: fuel=32, tolls=16, repair=5, salary=31
        """
    )

