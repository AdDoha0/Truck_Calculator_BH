import path_setup  # This sets up the Python path

import streamlit as st
import pandas as pd
from ui_utils import sidebar_content
from db_utils import (
    init_database,
    create_truck,
    get_all_trucks, 
    get_truck_by_id,
    update_truck,
    delete_truck,
    get_truck_costs,
    update_truck_costs,
    get_common_costs,
    update_common_costs,
    get_trucks_full_data,
    get_available_periods
)

st.set_page_config(page_title="–°–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏ ‚Ä¢ BH Trans", page_icon="üìö", layout="wide")
sidebar_content()

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ë–î
init_database()

st.header("üìö –°–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏ –∏ —Å–µ—Ä–≤–∏—Å–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã")

T1, T2, T3, T4 = st.tabs(["üöõ –¢—Ä–∞–∫–∏", "üí∞ –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ä–∞—Å—Ö–æ–¥—ã", "üìÖ –ü–µ—Ä–∏–æ–¥—ã", "üìã –õ–æ–≥–∏"]) 

with T1:
    st.subheader("–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç—Ä–∞–∫–∞–º–∏")
    
    # ========== –î–û–ë–ê–í–õ–ï–ù–ò–ï –ù–û–í–û–ì–û –¢–†–ê–ö–ê ==========
    st.markdown("### ‚ûï –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π —Ç—Ä–∞–∫")
    
    with st.form("add_truck_form"):
        new_tractor_no = st.text_input(
            "–ù–æ–º–µ—Ä —Ç—Ä–∞–∫–∞",
            placeholder="–Ω–∞–ø—Ä–∏–º–µ—Ä: 1740, ABC123, TR001",
            help="–£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Ç—Ä–∞–∫–∞"
        )
        submit_add = st.form_submit_button("‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ç—Ä–∞–∫", type="primary")
        
        if submit_add:
            if new_tractor_no:
                create_truck(new_tractor_no)
                st.rerun()
            else:
                st.error("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç—Ä–∞–∫–∞!")
    
    st.divider()
    
    # ========== –ü–†–û–î–í–ò–ù–£–¢–ê–Ø –¢–ê–ë–õ–ò–¶–ê –¢–†–ê–ö–û–í ==========
    st.markdown("### üìã –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è —Ç–∞–±–ª–∏—Ü–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç—Ä–∞–∫–∞–º–∏")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è session_state –¥–ª—è –ø–µ—Ä–∏–æ–¥–∞
    if 'selected_period' not in st.session_state:
        st.session_state.selected_period = None
    
    # Callback —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–∏ —Å–º–µ–Ω–µ –ø–µ—Ä–∏–æ–¥–∞
    def on_period_change():
        # –ü—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ø–µ—Ä–∏–æ–¥–∞ –æ—á–∏—â–∞–µ–º –∫–µ—à —Ç–∞–±–ª–∏—Ü—ã
        if 'trucks_table_data' in st.session_state:
            del st.session_state.trucks_table_data
    
    # –í—ã–±–æ—Ä –ø–µ—Ä–∏–æ–¥–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ä–∞—Å—Ö–æ–¥–æ–≤
    col_period, col_info = st.columns([3, 1])
    
    with col_period:
        available_periods = get_available_periods()
        
        if available_periods:
            selected_period = st.selectbox(
                "–í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä–∏–æ–¥ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ä–∞—Å—Ö–æ–¥–æ–≤",
                options=available_periods,
                help="–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Å—è—Ü –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ä–∞—Å—Ö–æ–¥–æ–≤",
                key="period_selector",
                on_change=on_period_change,
                index=0 if st.session_state.selected_period is None else (
                    available_periods.index(st.session_state.selected_period) 
                    if st.session_state.selected_period in available_periods 
                    else 0
                )
            )
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ session_state
            st.session_state.selected_period = selected_period
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
            st.caption(f"üìÖ –ó–∞–≥—Ä—É–∂–∞—é—Ç—Å—è –¥–∞–Ω–Ω—ã–µ –∑–∞: **{selected_period}**")
        else:
            st.info("üì≠ –ù–µ—Ç –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –º–µ—Å—è—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö. –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Ä–∞—Å—Ö–æ–¥—ã –±—É–¥—É—Ç —Ä–∞–≤–Ω—ã 0.")
            selected_period = None
            st.session_state.selected_period = None
    
    with col_info:
        st.markdown("**–õ–µ–≥–µ–Ω–¥–∞:**")
        st.caption("üîµ –§–∏–∫—Å. —Ä–∞—Å—Ö–æ–¥—ã")
        st.caption("üü¢ –ü–µ—Ä–µ–º. —Ä–∞—Å—Ö–æ–¥—ã")
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ç—Ä–∞–∫–æ–≤ —Å —Ä–∞—Å—Ö–æ–¥–∞–º–∏ - —è–≤–Ω–æ –ø–µ—Ä–µ–¥–∞—ë–º –ø–µ—Ä–∏–æ–¥
    trucks_data = get_trucks_full_data(selected_period if selected_period else None)
    
    if not trucks_data:
        st.info("üì≠ –¢—Ä–∞–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–≤—ã–π —Ç—Ä–∞–∫ –≤—ã—à–µ.")
    else:
        # Debug: –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–∫–æ–ª—å–∫–æ —Ç—Ä–∞–∫–æ–≤ —Å –º–µ—Å—è—á–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
        trucks_with_data = len([t for t in trucks_data if t.get('has_monthly_data', False)])
        
        # Debug –ø–∞–Ω–µ–ª—å —Å –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
        if selected_period:
            debug_col1, debug_col2 = st.columns([2, 1])
            
            with debug_col1:
                st.info(f"‚ÑπÔ∏è –¢—Ä–∞–∫–æ–≤ —Å –¥–∞–Ω–Ω—ã–º–∏ –∑–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥: **{trucks_with_data}** –∏–∑ {len(trucks_data)}")
            
            with debug_col2:
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö –ø–µ—Ä–≤–æ–≥–æ —Ç—Ä–∞–∫–∞ —Å –¥–∞–Ω–Ω—ã–º–∏
                first_truck_with_data = next((t for t in trucks_data if t.get('has_monthly_data', False)), None)
                if first_truck_with_data:
                    with st.expander("üîç –ü—Ä–∏–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö (DEBUG)"):
                        st.write(f"**–¢—Ä–∞–∫:** {first_truck_with_data['tractor_no']}")
                        st.write(f"**–ó–∞—Ä–ø–ª–∞—Ç–∞:** ${first_truck_with_data['salary']:.2f}")
                        st.write(f"**–¢–æ–ø–ª–∏–≤–æ:** ${first_truck_with_data['fuel']:.2f}")
                        st.write(f"**–°–±–æ—Ä—ã:** ${first_truck_with_data['tolls']:.2f}")
        
        # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã
        table_data = []
        for truck in trucks_data:
            # –í—ã—á–∏—Å–ª—è–µ–º –∏—Ç–æ–≥–∏
            total_fixed = (truck['truck_payment'] + truck['trailer_payment'] + 
                          truck['truck_insurance'] + truck['trailer_insurance'])
            total_variable = (truck['salary'] + truck['fuel'] + truck['tolls'])
            total_all = total_fixed + total_variable
            
            table_data.append({
                'ID': truck['id'],
                '–ù–æ–º–µ—Ä —Ç—Ä–∞–∫–∞': truck['tractor_no'],
                # –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ä–∞—Å—Ö–æ–¥—ã
                'üí∞ –í—ã–ø–ª–∞—Ç–∞ —Ç—Ä–∞–∫': truck['truck_payment'],
                'üí∞ –í—ã–ø–ª–∞—Ç–∞ –ø—Ä–∏—Ü–µ–ø': truck['trailer_payment'],
                'üõ°Ô∏è –°—Ç—Ä–∞—Ö. —Ç—Ä–∞–∫': truck['truck_insurance'],
                'üõ°Ô∏è –°—Ç—Ä–∞—Ö. –ø—Ä–∏—Ü–µ–ø': truck['trailer_insurance'],
                'üìä –ò–¢–û–ì–û –§–ò–ö–°': total_fixed,
                # –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Ä–∞—Å—Ö–æ–¥—ã
                'üë∑ –ó–∞—Ä–ø–ª–∞—Ç–∞': truck['salary'],
                '‚õΩ –¢–æ–ø–ª–∏–≤–æ': truck['fuel'],
                'üõ£Ô∏è –î–æ—Ä. —Å–±–æ—Ä—ã': truck['tolls'],
                'üìä –ò–¢–û–ì–û –ü–ï–†–ï–ú': total_variable,
                # –û–±—â–∏–π –∏—Ç–æ–≥
                'üíµ –í–°–ï–ì–û': total_all,
            })
        
        df = pd.DataFrame(table_data)
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–ª–æ–Ω–æ–∫ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        column_config = {
            'ID': st.column_config.NumberColumn('ID', disabled=True, width='small'),
            '–ù–æ–º–µ—Ä —Ç—Ä–∞–∫–∞': st.column_config.TextColumn('–ù–æ–º–µ—Ä —Ç—Ä–∞–∫–∞', disabled=True, width='medium'),
            # –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ä–∞—Å—Ö–æ–¥—ã - —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º—ã–µ
            'üí∞ –í—ã–ø–ª–∞—Ç–∞ —Ç—Ä–∞–∫': st.column_config.NumberColumn('üí∞ –í—ã–ø–ª–∞—Ç–∞ —Ç—Ä–∞–∫', min_value=0, format='$%.2f'),
            'üí∞ –í—ã–ø–ª–∞—Ç–∞ –ø—Ä–∏—Ü–µ–ø': st.column_config.NumberColumn('üí∞ –í—ã–ø–ª–∞—Ç–∞ –ø—Ä–∏—Ü–µ–ø', min_value=0, format='$%.2f'),
            'üõ°Ô∏è –°—Ç—Ä–∞—Ö. —Ç—Ä–∞–∫': st.column_config.NumberColumn('üõ°Ô∏è –°—Ç—Ä–∞—Ö. —Ç—Ä–∞–∫', min_value=0, format='$%.2f'),
            'üõ°Ô∏è –°—Ç—Ä–∞—Ö. –ø—Ä–∏—Ü–µ–ø': st.column_config.NumberColumn('üõ°Ô∏è –°—Ç—Ä–∞—Ö. –ø—Ä–∏—Ü–µ–ø', min_value=0, format='$%.2f'),
            'üìä –ò–¢–û–ì–û –§–ò–ö–°': st.column_config.NumberColumn('üìä –ò–¢–û–ì–û –§–ò–ö–°', disabled=True, format='$%.2f'),
            # –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Ä–∞—Å—Ö–æ–¥—ã - —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º—ã–µ –µ—Å–ª–∏ –≤—ã–±—Ä–∞–Ω –ø–µ—Ä–∏–æ–¥
            'üë∑ –ó–∞—Ä–ø–ª–∞—Ç–∞': st.column_config.NumberColumn('üë∑ –ó–∞—Ä–ø–ª–∞—Ç–∞', min_value=0, format='$%.2f', disabled=(selected_period is None)),
            '‚õΩ –¢–æ–ø–ª–∏–≤–æ': st.column_config.NumberColumn('‚õΩ –¢–æ–ø–ª–∏–≤–æ', min_value=0, format='$%.2f', disabled=(selected_period is None)),
            'üõ£Ô∏è –î–æ—Ä. —Å–±–æ—Ä—ã': st.column_config.NumberColumn('üõ£Ô∏è –î–æ—Ä. —Å–±–æ—Ä—ã', min_value=0, format='$%.2f', disabled=(selected_period is None)),
            'üìä –ò–¢–û–ì–û –ü–ï–†–ï–ú': st.column_config.NumberColumn('üìä –ò–¢–û–ì–û –ü–ï–†–ï–ú', disabled=True, format='$%.2f'),
            # –û–±—â–∏–π –∏—Ç–æ–≥
            'üíµ –í–°–ï–ì–û': st.column_config.NumberColumn('üíµ –í–°–ï–ì–û', disabled=True, format='$%.2f', width='medium'),
        }
        
        # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º–æ–π —Ç–∞–±–ª–∏—Ü—ã
        # Key –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –ø–µ—Ä–∏–æ–¥–∞, —á—Ç–æ–±—ã —Ç–∞–±–ª–∏—Ü–∞ –æ–±–Ω–æ–≤–ª—è–ª–∞—Å—å –ø—Ä–∏ —Å–º–µ–Ω–µ –ø–µ—Ä–∏–æ–¥–∞
        table_key = f"trucks_table_editor_{selected_period}" if selected_period else "trucks_table_editor_no_period"
        edited_df = st.data_editor(
            df,
            use_container_width=True,
            hide_index=True,
            column_config=column_config,
            key=table_key
        )
        
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π
        if not df.equals(edited_df):
            st.markdown("### üîÑ –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –∏–∑–º–µ–Ω–µ–Ω–∏—è")
            
            # –ù–∞–π—Ç–∏ –∏–∑–º–µ–Ω—ë–Ω–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏
            changes_detected = False
            
            for idx in range(len(df)):
                truck_id = int(df.iloc[idx]['ID'])
                original_row = df.iloc[idx]
                edited_row = edited_df.iloc[idx]
                
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ä–∞—Å—Ö–æ–¥–∞—Ö
                fixed_costs_changed = (
                    original_row['üí∞ –í—ã–ø–ª–∞—Ç–∞ —Ç—Ä–∞–∫'] != edited_row['üí∞ –í—ã–ø–ª–∞—Ç–∞ —Ç—Ä–∞–∫'] or
                    original_row['üí∞ –í—ã–ø–ª–∞—Ç–∞ –ø—Ä–∏—Ü–µ–ø'] != edited_row['üí∞ –í—ã–ø–ª–∞—Ç–∞ –ø—Ä–∏—Ü–µ–ø'] or
                    original_row['üõ°Ô∏è –°—Ç—Ä–∞—Ö. —Ç—Ä–∞–∫'] != edited_row['üõ°Ô∏è –°—Ç—Ä–∞—Ö. —Ç—Ä–∞–∫'] or
                    original_row['üõ°Ô∏è –°—Ç—Ä–∞—Ö. –ø—Ä–∏—Ü–µ–ø'] != edited_row['üõ°Ô∏è –°—Ç—Ä–∞—Ö. –ø—Ä–∏—Ü–µ–ø']
                )
                
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ä–∞—Å—Ö–æ–¥–∞—Ö
                variable_costs_changed = selected_period and (
                    original_row['üë∑ –ó–∞—Ä–ø–ª–∞—Ç–∞'] != edited_row['üë∑ –ó–∞—Ä–ø–ª–∞—Ç–∞'] or
                    original_row['‚õΩ –¢–æ–ø–ª–∏–≤–æ'] != edited_row['‚õΩ –¢–æ–ø–ª–∏–≤–æ'] or
                    original_row['üõ£Ô∏è –î–æ—Ä. —Å–±–æ—Ä—ã'] != edited_row['üõ£Ô∏è –î–æ—Ä. —Å–±–æ—Ä—ã']
                )
                
                if fixed_costs_changed:
                    changes_detected = True
                    st.info(f"–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ–∏–∫—Å. —Ä–∞—Å—Ö–æ–¥–æ–≤ –¥–ª—è —Ç—Ä–∞–∫–∞ ID {truck_id}...")
                    update_truck_costs(
                        truck_id,
                        truck_payment=float(edited_row['üí∞ –í—ã–ø–ª–∞—Ç–∞ —Ç—Ä–∞–∫']),
                        trailer_payment=float(edited_row['üí∞ –í—ã–ø–ª–∞—Ç–∞ –ø—Ä–∏—Ü–µ–ø']),
                        physical_damage_insurance_truck=float(edited_row['üõ°Ô∏è –°—Ç—Ä–∞—Ö. —Ç—Ä–∞–∫']),
                        physical_damage_insurance_trailer=float(edited_row['üõ°Ô∏è –°—Ç—Ä–∞—Ö. –ø—Ä–∏—Ü–µ–ø'])
                    )
                
                if variable_costs_changed:
                    changes_detected = True
                    st.info(f"‚ö†Ô∏è –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Ä–∞—Å—Ö–æ–¥—ã –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è —á–µ—Ä–µ–∑ –∑–∞–≥—Ä—É–∑–∫—É Excel —Ñ–∞–π–ª–æ–≤ (—Å—Ç—Ä–∞–Ω–∏—Ü–∞ Upload)")
                    # Note: Variable costs are now managed through Excel upload process
            
            if changes_detected:
                st.success("‚úÖ –í—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã! –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è.")
                if st.button("üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ"):
                    st.rerun()
        
        st.markdown(f"**–í—Å–µ–≥–æ —Ç—Ä–∞–∫–æ–≤:** {len(trucks_data)}")
        
        # ========== –†–ï–î–ê–ö–¢–ò–†–û–í–ê–ù–ò–ï/–£–î–ê–õ–ï–ù–ò–ï –¢–†–ê–ö–ê ==========
        st.divider()
        st.markdown("### ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å/–£–¥–∞–ª–∏—Ç—å —Ç—Ä–∞–∫")
        
        truck_options = {f"{truck['tractor_no']} (ID: {truck['id']})": truck['id'] 
                        for truck in trucks_data}
        
        selected_truck_label = st.selectbox(
            "–í—ã–±–µ—Ä–∏—Ç–µ —Ç—Ä–∞–∫ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è",
            options=list(truck_options.keys()),
            help="–í—ã–±–µ—Ä–∏—Ç–µ —Ç—Ä–∞–∫ –∏–∑ —Å–ø–∏—Å–∫–∞"
        )
        
        if selected_truck_label:
            selected_truck_id = truck_options[selected_truck_label]
            truck_data = get_truck_by_id(selected_truck_id)
            
            if truck_data:
                col1, col2 = st.columns([2, 1])
                
                with col1:
                    # –§–æ—Ä–º–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–æ–º–µ—Ä–∞ —Ç—Ä–∞–∫–∞
                    with st.form(f"edit_truck_form_{selected_truck_id}"):
                        st.write(f"**–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç—Ä–∞–∫–∞ ID: {truck_data['id']}**")
                        
                        new_tractor_no = st.text_input(
                            "–ù–æ–≤—ã–π –Ω–æ–º–µ—Ä —Ç—Ä–∞–∫–∞",
                            value=truck_data['tractor_no'],
                            help="–ò–∑–º–µ–Ω–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç—Ä–∞–∫–∞"
                        )
                        
                        submit_edit = st.form_submit_button("üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è", type="primary")
                        
                        if submit_edit:
                            if new_tractor_no:
                                if update_truck(selected_truck_id, new_tractor_no):
                                    st.rerun()
                            else:
                                st.error("–ù–æ–º–µ—Ä —Ç—Ä–∞–∫–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º!")
                
                with col2:
                    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∏ —É–¥–∞–ª–µ–Ω–∏–µ
                    st.markdown("**–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:**")
                    st.write(f"‚Ä¢ –ú–µ—Å—è—á–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π: {truck_data['monthly_rows_count']}")
                    st.write(f"‚Ä¢ –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ä–∞—Å—Ö–æ–¥–æ–≤: {truck_data['fixed_costs_count']}")
                    
                    # –ö–Ω–æ–ø–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è
                    if truck_data['monthly_rows_count'] > 0:
                        st.warning("‚ö†Ô∏è –ù–µ–ª—å–∑—è —É–¥–∞–ª–∏—Ç—å —Ç—Ä–∞–∫ —Å –º–µ—Å—è—á–Ω—ã–º–∏ –∑–∞–ø–∏—Å—è–º–∏")
                    else:
                        if st.button("üóëÔ∏è –£–¥–∞–ª–∏—Ç—å —Ç—Ä–∞–∫", 
                                   key=f"delete_{selected_truck_id}",
                                   help="–ë–µ–∑–≤–æ–∑–≤—Ä–∞—Ç–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ —Ç—Ä–∞–∫–∞"):
                            if delete_truck(selected_truck_id):
                                st.rerun()

with T2:
    st.subheader("üí∞ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ —Ä–∞—Å—Ö–æ–¥–∞–º–∏")
    
    # –û–±—â–∏–µ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ä–∞—Å—Ö–æ–¥—ã
    st.markdown("### üåç –û–±—â–∏–µ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ä–∞—Å—Ö–æ–¥—ã (–ø—Ä–∏–º–µ–Ω—è—é—Ç—Å—è –∫–æ –≤—Å–µ–º —Ç—Ä–∞–∫–∞–º)")
    
    common_costs = get_common_costs()
    
    with st.form("common_costs_form"):
        st.markdown("**–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –æ–±—â–∏–µ —Ä–∞—Å—Ö–æ–¥—ã:**")
        
        col1, col2 = st.columns(2)
        
        with col1:
            ifta = st.number_input("IFTA ($)", value=common_costs['ifta'], min_value=0.0, step=10.0)
            insurance = st.number_input("–°—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏–µ –±–∏–∑–Ω–µ—Å–∞ ($)", value=common_costs['insurance'], min_value=0.0, step=10.0)
            eld = st.number_input("ELD —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ ($)", value=common_costs['eld'], min_value=0.0, step=1.0)
        
        with col2:
            tablet = st.number_input("–ü–ª–∞–Ω—à–µ—Ç/–Ω–∞–≤–∏–≥–∞—Ü–∏—è ($)", value=common_costs['tablet'], min_value=0.0, step=1.0)
            tolls = st.number_input("–ë–∞–∑–æ–≤—ã–µ –¥–æ—Ä–æ–∂–Ω—ã–µ —Å–±–æ—Ä—ã ($)", value=common_costs['tolls'], min_value=0.0, step=10.0)
        
        # –ü–æ–∫–∞–∑–∞—Ç—å –æ–±—â—É—é —Å—É–º–º—É
        total_common = ifta + insurance + eld + tablet + tolls
        st.markdown(f"**–û–±—â–∞—è —Å—É–º–º–∞ –æ–±—â–∏—Ö —Ä–∞—Å—Ö–æ–¥–æ–≤: ${total_common:,.2f}/–º–µ—Å—è—Ü**")
        
        submit_common = st.form_submit_button("üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –æ–±—â–∏–µ —Ä–∞—Å—Ö–æ–¥—ã", type="primary")
        
        if submit_common:
            success = update_common_costs(
                ifta=ifta,
                insurance=insurance,
                eld=eld,
                tablet=tablet,
                tolls=tolls
            )
            if success:
                st.rerun()
    
    st.divider()
    
    # –†–∞—Å—Ö–æ–¥—ã –ø–æ —Ç—Ä–∞–∫–∞–º
    st.markdown("### üöõ –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ä–∞—Å—Ö–æ–¥—ã –ø–æ —Ç—Ä–∞–∫–∞–º")
    
    trucks = get_all_trucks()
    
    if not trucks:
        st.info("üì≠ –°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–π—Ç–µ —Ç—Ä–∞–∫–∏ –≤–æ –≤–∫–ª–∞–¥–∫–µ '–¢—Ä–∞–∫–∏'")
    else:
        truck_options = {f"{truck['tractor_no']} (ID: {truck['id']})": truck['id'] 
                        for truck in trucks}
        
        selected_truck_label = st.selectbox(
            "–í—ã–±–µ—Ä–∏—Ç–µ —Ç—Ä–∞–∫ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–∞—Å—Ö–æ–¥–æ–≤",
            options=list(truck_options.keys()),
            help="–í—ã–±–µ—Ä–∏—Ç–µ —Ç—Ä–∞–∫ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –µ–≥–æ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ä–∞—Å—Ö–æ–¥–æ–≤"
        )
        
        if selected_truck_label:
            selected_truck_id = truck_options[selected_truck_label]
            truck_costs = get_truck_costs(selected_truck_id)
            
            with st.form(f"truck_costs_form_{selected_truck_id}"):
                st.markdown(f"**–†–∞—Å—Ö–æ–¥—ã —Ç—Ä–∞–∫–∞: {selected_truck_label}**")
                
                col1, col2 = st.columns(2)
                
                with col1:
                    truck_payment = st.number_input(
                        "–í—ã–ø–ª–∞—Ç–∞ –∑–∞ —Ç—Ä–∞–∫ ($)", 
                        value=truck_costs['truck_payment'], 
                        min_value=0.0, 
                        step=50.0,
                        help="–ú–µ—Å—è—á–Ω–∞—è –≤—ã–ø–ª–∞—Ç–∞ –∑–∞ —Ç—Ä–∞–∫ (–ª–∏–∑–∏–Ω–≥/–∫—Ä–µ–¥–∏—Ç)"
                    )
                    trailer_payment = st.number_input(
                        "–í—ã–ø–ª–∞—Ç–∞ –∑–∞ –ø—Ä–∏—Ü–µ–ø ($)", 
                        value=truck_costs['trailer_payment'], 
                        min_value=0.0, 
                        step=50.0,
                        help="–ú–µ—Å—è—á–Ω–∞—è –≤—ã–ø–ª–∞—Ç–∞ –∑–∞ –ø—Ä–∏—Ü–µ–ø"
                    )
                
                with col2:
                    truck_insurance = st.number_input(
                        "–°—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏–µ —Ç—Ä–∞–∫–∞ ($)", 
                        value=truck_costs['physical_damage_insurance_truck'],
                        min_value=0.0, 
                        step=10.0,
                        help="–§–∏–∑–∏—á–µ—Å–∫–æ–µ —Å—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏–µ —Ç—Ä–∞–∫–∞"
                    )
                    trailer_insurance = st.number_input(
                        "–°—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏–µ –ø—Ä–∏—Ü–µ–ø–∞ ($)", 
                        value=truck_costs['physical_damage_insurance_trailer'],
                        min_value=0.0, 
                        step=10.0,
                        help="–§–∏–∑–∏—á–µ—Å–∫–æ–µ —Å—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏–µ –ø—Ä–∏—Ü–µ–ø–∞"
                    )
                
                # –ü–æ–∫–∞–∑–∞—Ç—å –æ–±—â—É—é —Å—É–º–º—É –¥–ª—è —ç—Ç–æ–≥–æ —Ç—Ä–∞–∫–∞
                total_truck = truck_payment + trailer_payment + truck_insurance + trailer_insurance
                total_with_common = total_truck + total_common
                
                st.markdown(f"**–ò—Ç–æ–≥–æ –¥–ª—è —Ç—Ä–∞–∫–∞: ${total_truck:,.2f}/–º–µ—Å—è—Ü**")
                st.markdown(f"**–û–±—â–∏–π —Ñ–∏–∫—Å (—Å –æ–±—â–∏–º–∏ —Ä–∞—Å—Ö–æ–¥–∞–º–∏): ${total_with_common:,.2f}/–º–µ—Å—è—Ü**")
                
                submit_truck = st.form_submit_button("üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ä–∞—Å—Ö–æ–¥—ã —Ç—Ä–∞–∫–∞", type="primary")
                
                if submit_truck:
                    success = update_truck_costs(
                        selected_truck_id,
                        truck_payment=truck_payment,
                        trailer_payment=trailer_payment,
                        physical_damage_insurance_truck=truck_insurance,
                        physical_damage_insurance_trailer=trailer_insurance
                    )
                    if success:
                        st.rerun()

with T3:
    st.subheader("–ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –ø–µ—Ä–∏–æ–¥—ã (–¥–µ–º–æ)")
    st.info("üöß –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ª–æ–≥–∏–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤")
    st.dataframe(pd.DataFrame({
        "period_month": ["2025-07-01","2025-08-01","2025-09-01"],
        "files": ["5/5","4/5","2/5"],
        "status": ["complete","waiting salary","waiting fuel"]
    }))

with T4:
    st.subheader("–õ–æ–≥–∏ –æ–ø–µ—Ä–∞—Ü–∏–π (–¥–µ–º–æ)")
    st.info("üöß –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–æ –ø—Ä–∏ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤")
    st.code(
        """
2025-09-01 12:03  Uploaded fuel.xlsx (32 rows)
2025-09-01 12:05  Uploaded tolls.xlsx (16 rows)
2025-09-01 12:06  Uploaded repair.xlsx (5 rows)
2025-09-01 12:08  Uploaded salary.xlsx (31 rows)
2025-09-01 12:12  Uploaded gross.xlsx (32 rows)
2025-09-01 12:13  Upsert to monthly_revenue: 32 rows
2025-09-01 12:13  Upsert to variable_item: fuel=32, tolls=16, repair=5, salary=31
        """
    )

