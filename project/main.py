# app.py
# -------------------------------------------------------------
# –ú—É–ª—å—Ç–∏—Å—Ç—Ä–∞–Ω–∏—á–Ω—ã–π —Ñ—Ä–æ–Ω—Ç –Ω–∞ Streamlit –ø–æ–¥ –∑–∞–¥–∞—á—É —É—á—ë—Ç–∞ –ø–æ —Ç—Ä–∞–∫–∞–º.
# –ü–æ–∫–∏ –ë–ï–ó –ª–æ–≥–∏–∫–∏ –ë–î/ETL, —Ç–æ–ª—å–∫–æ UI/–≤–µ—Ä—Å—Ç–∫–∞ + –∑–∞–≥–ª—É—à–∫–∏.
# -------------------------------------------------------------

import streamlit as st
import pandas as pd
from datetime import date

st.set_page_config(
    page_title="BH Trans ‚Ä¢ –û—Ç—á—ë—Ç—ã –ø–æ —Ç—Ä–∞–∫–∞–º",
    page_icon="üöõ",
    layout="wide",
    initial_sidebar_state="expanded",
)

# -----------------------------
# üåà –û–±—â–∏–µ —Å—Ç–∏–ª–∏ (–ª–µ–≥–∫–∏–π –∫–∞—Å—Ç–æ–º)
# -----------------------------
CUSTOM_CSS = """
<style>
.block-container { padding-top: 1rem; }
.metric-card { 
  border: 1px solid rgba(49,51,63,0.2);
  border-radius: 16px; padding: 14px 16px; background: rgba(250, 250, 252, 0.75);
}
.section-card {
  border: 1px solid rgba(49,51,63,0.2);
  border-radius: 16px; padding: 18px; background: white;
}
.help { color: #6b7280; font-size: 0.9rem; }
.hint { color: #64748b; font-style: italic; }
.hr-soft { height: 1px; border: none; background: rgba(99,102,241,0.25); margin: 0.75rem 0 1rem; }
/* –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∫–∞–∫ –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–µ */
.sidebar-btn button {width:100%; text-align:left; border-radius:12px;}
</style>
"""
st.markdown(CUSTOM_CSS, unsafe_allow_html=True)

# -----------------------------
# üîß –°–æ—Å—Ç–æ—è–Ω–∏–µ (–ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä—ã)
# -----------------------------
if "active_page" not in st.session_state:
    st.session_state.active_page = "–ó–∞–≥—Ä—É–∑–∫–∞"

PAGES = ["–ó–∞–≥—Ä—É–∑–∫–∞", "–û—Ç—á—ë—Ç", "–ù–∞—Å—Ç—Ä–æ–π–∫–∏", "–°–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏"]
PAGE_ICONS = {"–ó–∞–≥—Ä—É–∑–∫–∞":"üìÅ","–û—Ç—á—ë—Ç":"üìä","–ù–∞—Å—Ç—Ä–æ–π–∫–∏":"‚öôÔ∏è","–°–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏":"üìö"}

# -----------------------------
# üß≠ –°–∞–π–¥–±–∞—Ä –Ω–∞–≤–∏–≥–∞—Ü–∏—è (–∫–Ω–æ–ø–∫–∏ –≤–º–µ—Å—Ç–æ —Ä–∞–¥–∏–æ)
# -----------------------------
with st.sidebar:
    st.title("üöö BH Trans")
    st.caption("–û—Ç—á—ë—Ç—ã –ø–æ —Ç—Ä–∞–∫–∞–º ‚Ä¢ —Ñ—Ä–æ–Ω—Ç –±–µ–∑ –ª–æ–≥–∏–∫–∏")
    for p in PAGES:
        label = f"{PAGE_ICONS.get(p,'‚Ä¢')}  {p}"
        # –∫–ª–∞—Å—Å .sidebar-btn –¥–∞—ë—Ç –Ω–∞–º —á—É—Ç—å –±–æ–ª–µ–µ —à–∏—Ä–æ–∫—É—é –∫–Ω–æ–ø–∫—É –∏ —Å–∫—Ä—É–≥–ª–µ–Ω–∏–µ
        c = st.container()
        with c:
            clicked = st.button(label, key=f"nav_{p}", use_container_width=True)
        if clicked:
            st.session_state.active_page = p
    st.divider()
    st.markdown(f"""
**–í —ç—Ç–æ–º MVP:**
- 5 –∑–∞–≥—Ä—É–∑—á–∏–∫–æ–≤ —Ñ–∞–π–ª–æ–≤
- –í–∞–ª–∏–¥–∞—Ü–∏—è tractor_no
- –ö–∞—Ä—Ç–æ—á–∫–∏ KPI  
- –ì—Ä–∞—Ñ–∏–∫–∏ GP, RPM/CPM
- –ó–∞–≥–ª—É—à–∫–∏ —Ñ–æ—Ä–º —Ñ–∏–∫—Å-—Ä–∞—Å—Ö–æ–¥–æ–≤ –∏ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–æ–≤
    """)

# =============================================================
# üß© –°—Ç—Ä–∞–Ω–∏—Ü–∞: –ó–ê–ì–†–£–ó–ö–ê
# =============================================================
if st.session_state.active_page == "–ó–∞–≥—Ä—É–∑–∫–∞":
    st.header("üìÅ –ó–∞–≥—Ä—É–∑–∫–∞ –º–µ—Å—è—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö")
    st.write("–ó–¥–µ—Å—å –±—É—Ö–≥–∞–ª—Ç–µ—Ä –∑–∞–≥—Ä—É–∂–∞–µ—Ç 5 Excel-—Ñ–∞–π–ª–æ–≤ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º. –ü–æ–∫–∏ –±–µ–∑ –∑–∞–ø–∏—Å–∏ –≤ –ë–î ‚Äî —Ç–æ–ª—å–∫–æ UI.")

    with st.container():
        st.subheader("1) –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–µ—Ä–∏–æ–¥–∞")
        c1, c2, c3 = st.columns([1,1,2])
        with c1:
            period_month = st.date_input("–ú–µ—Å—è—Ü –æ—Ç—á—ë—Ç–∞", value=date.today().replace(day=1), format="YYYY-MM-DD")
        with c2:
            currency = st.selectbox("–í–∞–ª—é—Ç–∞", ["USD", "EUR"], index=0)
        with c3:
            st.write("\n")
            st.markdown("<div class='hint'>–í—Å–µ —Ñ–∞–π–ª—ã –¥–æ–ª–∂–Ω—ã —Å–æ–¥–µ—Ä–∂–∞—Ç—å –∫–æ–ª–æ–Ω–∫—É <code>tractor_no</code>.</div>", unsafe_allow_html=True)

    st.markdown("<hr class='hr-soft'>", unsafe_allow_html=True)

    with st.container():
        st.subheader("2) –§–∞–π–ª—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º")
        u1, u2 = st.columns(2)
        with u1:
            fuel_file   = st.file_uploader("‚õΩ Fuel (.xlsx)", type=["xlsx"], key="file_fuel")
            tolls_file  = st.file_uploader("üõ£Ô∏è Tolls (.xlsx)", type=["xlsx"], key="file_tolls")
            repair_file = st.file_uploader("üîß Repair (.xlsx)", type=["xlsx"], key="file_repair")
        with u2:
            salary_file = st.file_uploader("üë∑ Salary (.xlsx)", type=["xlsx"], key="file_salary")
            gross_file  = st.file_uploader("üíµ Gross (.xlsx) ‚Äî —Å–æ–¥–µ—Ä–∂–∏—Ç total_rev –∏ total_miles", type=["xlsx"], key="file_gross")

        st.markdown("<div class='help'>–ü–æ–¥—Å–∫–∞–∑–∫–∞: –∏–º–µ–Ω–∞ –ª–∏—Å—Ç–æ–≤ –∏ –∫–æ–ª–æ–Ω–æ–∫ –º–æ–∂–Ω–æ –±—É–¥–µ—Ç —Å–∫–æ–Ω—Ñ–∏–≥—É—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–æ–∑–∂–µ.</div>", unsafe_allow_html=True)

    st.markdown("<hr class='hr-soft'>", unsafe_allow_html=True)

    with st.container():
        st.subheader("3) –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –∏ –≤–∞–ª–∏–¥–∞—Ü–∏—è")
        st.write("–ü–æ–∫–∞–∑–∞–Ω—ã –ø–µ—Ä–≤—ã–µ 5 —Å—Ç—Ä–æ–∫ –∫–∞–∂–¥–æ–≥–æ —Ñ–∞–π–ª–∞ (–µ—Å–ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω).")
        pv1, pv2 = st.columns(2)
        with pv1:
            if fuel_file:
                st.caption("Fuel")
                try:
                    st.dataframe(pd.read_excel(fuel_file).head())
                except Exception as e:
                    st.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å —Ñ–∞–π–ª Fuel: {e}")
            if tolls_file:
                st.caption("Tolls")
                try:
                    st.dataframe(pd.read_excel(tolls_file).head())
                except Exception as e:
                    st.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å —Ñ–∞–π–ª Tolls: {e}")
            if repair_file:
                st.caption("Repair")
                try:
                    st.dataframe(pd.read_excel(repair_file).head())
                except Exception as e:
                    st.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å —Ñ–∞–π–ª Repair: {e}")
        with pv2:
            if salary_file:
                st.caption("Salary")
                try:
                    st.dataframe(pd.read_excel(salary_file).head())
                except Exception as e:
                    st.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å —Ñ–∞–π–ª Salary: {e}")
            if gross_file:
                st.caption("Gross (rev & miles)")
                try:
                    st.dataframe(pd.read_excel(gross_file).head())
                except Exception as e:
                    st.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å —Ñ–∞–π–ª Gross: {e}")

        st.markdown("<br>", unsafe_allow_html=True)
        st.subheader("üîé –í–∞–ª–∏–¥–∞—Ü–∏—è tractor_no")
        st.write("–ó–¥–µ—Å—å –ø–æ—è–≤–∏—Ç—Å—è —Ç–∞–±–ª–∏—Ü–∞ —Ç—Ä–∞–∫–æ–≤, –∫–æ—Ç–æ—Ä—ã—Ö –Ω–µ—Ç –≤ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–µ \"truck\" (–ø–æ–∫–∞ –∑–∞–≥–ª—É—à–∫–∞).")
        st.dataframe(pd.DataFrame({
            "tractor_no": ["1740", "9999"],
            "status": ["OK", "NOT FOUND"],
            "–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π": ["–µ—Å—Ç—å –≤ –ë–î", "–¥–æ–±–∞–≤–∏—Ç—å –≤ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫"]
        }))

        st.markdown("<br>", unsafe_allow_html=True)
        st.button("üíæ –ó–∞–ª–∏—Ç—å –≤ –ë–î (UPsert)", help="–ü–æ–∫–∞ –Ω–µ –¥–µ–ª–∞–µ—Ç –∑–∞–ø–∏—Å—å ‚Äî —Ç–æ–ª—å–∫–æ UI-–∫–Ω–æ–ø–∫–∞")

# =============================================================
# üìä –°—Ç—Ä–∞–Ω–∏—Ü–∞: –û–¢–ß–Å–¢
# =============================================================
elif st.session_state.active_page == "–û—Ç—á—ë—Ç":
    st.header("üìä –û—Ç—á—ë—Ç –ø–æ —Ç—Ä–∞–∫–∞–º")
    st.write("–í—ã–±–µ—Ä–∏ –º–µ—Å—è—Ü, –¥–∞–ª–µ–µ ‚Äî —Å–≤–æ–¥–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ –∏ –≥—Ä–∞—Ñ–∏–∫–∏. –ü–æ–∫–∞ –¥–∞–Ω–Ω—ã–µ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ.")

    # –î–µ–º–æ-–º–µ—Å—è—Ü–∞
    months_demo = pd.to_datetime(pd.Series(["2025-07-01", "2025-08-01", "2025-09-01"]))
    month = st.selectbox("–ú–µ—Å—è—Ü", options=months_demo, format_func=lambda d: d.strftime("%Y-%m"))

    # –î–µ–º–æ–¥–∞–Ω–Ω—ã–µ –æ—Ç—á—ë—Ç–∞
    demo = pd.DataFrame({
        "tractor_no": ["1740", "1741", "1742", "1743"],
        "driver_name": ["Brandon", "Tyler", "Askar", "Miguel"],
        "total_rev": [27300, 25800, 29150, 24000],
        "total_miles": [9500, 8800, 10050, 8200],
        "salary": [4000, 3600, 4200, 3300],
        "fuel": [4250, 3900, 4450, 3700],
        "tolls": [350, 290, 310, 280],
        "repair": [600, 450, 500, 480],
        "total_fixed": [3405, 3440, 3520, 3300],
    })
    demo["total_variable"] = demo[["salary","fuel","tolls","repair"]].sum(axis=1)
    demo["gross_profit"] = demo["total_rev"] - (demo["total_variable"] + demo["total_fixed"])
    demo["rpm"] = (demo["total_rev"] / demo["total_miles"]).round(3)
    demo["cpm"] = ((demo["total_variable"] + demo["total_fixed"]) / demo["total_miles"]).round(3)

    # KPI –∫–∞—Ä—Ç–æ—á–∫–∏
    k1, k2, k3, k4 = st.columns(4)
    with k1:
        st.markdown("<div class='metric-card'>", unsafe_allow_html=True)
        st.metric("Sum(Rev)", f"${demo['total_rev'].sum():,.0f}")
        st.markdown("</div>", unsafe_allow_html=True)
    with k2:
        st.markdown("<div class='metric-card'>", unsafe_allow_html=True)
        st.metric("Sum(Var)", f"${demo['total_variable'].sum():,.0f}")
        st.markdown("</div>", unsafe_allow_html=True)
    with k3:
        st.markdown("<div class='metric-card'>", unsafe_allow_html=True)
        st.metric("Sum(Fixed)", f"${demo['total_fixed'].sum():,.0f}")
        st.markdown("</div>", unsafe_allow_html=True)
    with k4:
        st.markdown("<div class='metric-card'>", unsafe_allow_html=True)
        st.metric("Sum(GP)", f"${demo['gross_profit'].sum():,.0f}")
        st.markdown("</div>", unsafe_allow_html=True)

    st.markdown("<hr class='hr-soft'>", unsafe_allow_html=True)

    with st.container():
        st.subheader("üßæ –¢–∞–±–ª–∏—Ü–∞ –æ—Ç—á—ë—Ç–∞ (v_unit_month)")
        st.dataframe(demo[[
            "tractor_no","driver_name","total_rev","total_miles",
            "salary","fuel","tolls","repair","total_variable","total_fixed","gross_profit","rpm","cpm"
        ]])

    st.markdown("<hr class='hr-soft'>", unsafe_allow_html=True)

    g1, g2 = st.columns(2)
    with g1:
        st.subheader("üìà GP –ø–æ —Ç—Ä–∞–∫–∞–º")
        st.bar_chart(demo.set_index("tractor_no")["gross_profit"])
    with g2:
        st.subheader("üìâ RPM / CPM –ø–æ —Ç—Ä–∞–∫–∞–º")
        st.line_chart(demo.set_index("tractor_no")[["rpm","cpm"]])

    st.markdown("<br>", unsafe_allow_html=True)
    st.subheader("‚è≥ –î–∏–Ω–∞–º–∏–∫–∞ GP (–¥–µ–º–æ)")
    trend = pd.DataFrame({
        "month": ["2025-07","2025-08","2025-09"],
        "gp": [demo["gross_profit"].sum()-2000, demo["gross_profit"].sum()+500, demo["gross_profit"].sum()+1200]
    }).set_index("month")
    st.area_chart(trend)

# =============================================================
# ‚öôÔ∏è –°—Ç—Ä–∞–Ω–∏—Ü–∞: –ù–ê–°–¢–†–û–ô–ö–ò (—Ñ–∏–∫—Å—ã)
# =============================================================
elif st.session_state.active_page == "–ù–∞—Å—Ç—Ä–æ–π–∫–∏":
    st.header("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ä–∞—Å—Ö–æ–¥–æ–≤")
    st.write("–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—â–∏—Ö –∏ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã—Ö —Ñ–∏–∫—Å-–∑–Ω–∞—á–µ–Ω–∏–π. –ü–æ–∫–∏ UI –±–µ–∑ —Å–≤—è–∑–∫–∏ —Å –ë–î.")

    c_common, c_truck = st.tabs(["–û–±—â–∏–µ (fixed_costs_common)", "–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ (fixed_costs_truck)"])

    with c_common:
        st.markdown("<div class='section-card'>", unsafe_allow_html=True)
        st.subheader("–û–±—â–∏–µ —Ä–∞—Å—Ö–æ–¥—ã –¥–ª—è –≤—Å–µ—Ö —Ç—Ä–∞–∫–æ–≤")
        col1, col2, col3, col4 = st.columns(4)
        with col1:
            ifta = st.number_input("IFTA, $/–º–µ—Å", min_value=0.0, value=150.0, step=10.0)
        with col2:
            ins = st.number_input("Insurance (Liability), $/–º–µ—Å", min_value=0.0, value=600.0, step=10.0)
        with col3:
            eld = st.number_input("ELD, $/–º–µ—Å", min_value=0.0, value=40.0, step=1.0)
        with col4:
            tablet = st.number_input("Tablet, $/–º–µ—Å", min_value=0.0, value=25.0, step=1.0)
        st.button("üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –æ–±—â–∏–µ —Ñ–∏–∫—Å—ã", help="–°–µ–π—á–∞—Å –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç ‚Äî –∑–∞–≥–ª—É—à–∫–∞")
        st.markdown("</div>", unsafe_allow_html=True)

    with c_truck:
        st.markdown("<div class='section-card'>", unsafe_allow_html=True)
        st.subheader("–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –ø–æ —Ç—Ä–∞–∫—É")
        l1, l2 = st.columns([2,3])
        with l1:
            tractor = st.text_input("tractor_no", placeholder="–Ω–∞–ø—Ä–∏–º–µ—Ä, 1740")
            st.caption("–ë—É–¥–µ—Ç –∏—Å–∫–∞—Ç—å—Å—è –≤ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–µ truck ‚Üí –∑–∞—Ç–µ–º –ø–æ–¥—Ç—è–Ω–µ—Ç—Å—è truck_id")
        with l2:
            colA, colB, colC, colD = st.columns(4)
            with colA:
                tp = st.number_input("Truck payment", min_value=0.0, value=1200.0, step=10.0)
            with colB:
                trp = st.number_input("Trailer payment", min_value=0.0, value=800.0, step=10.0)
            with colC:
                pdt = st.number_input("PD Ins (Truck)", min_value=0.0, value=250.0, step=10.0)
            with colD:
                pdl = st.number_input("PD Ins (Trailer)", min_value=0.0, value=190.0, step=10.0)
        st.button("üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø–æ —Ç—Ä–∞–∫—É", help="–°–µ–π—á–∞—Å –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç ‚Äî –∑–∞–≥–ª—É—à–∫–∞")
        st.markdown("</div>", unsafe_allow_html=True)

# =============================================================
# üìö –°—Ç—Ä–∞–Ω–∏—Ü–∞: –°–ü–†–ê–í–û–ß–ù–ò–ö–ò
# =============================================================
elif st.session_state.active_page == "–°–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏":
    st.header("üìö –°–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏ –∏ —Å–µ—Ä–≤–∏—Å–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã")
    st.write("–î–æ–±–∞–≤–ª–µ–Ω–∏–µ/—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç—Ä–∞–∫–æ–≤, –ø—Ä–æ—Å–º–æ—Ç—Ä –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –ø–µ—Ä–∏–æ–¥–æ–≤, –ª–æ–≥ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π.")

    t1, t2, t3 = st.tabs(["–¢—Ä–∞–∫–∏", "–ü–µ—Ä–∏–æ–¥—ã", "–õ–æ–≥–∏"]) 

    with t1:
        st.subheader("–°–ø—Ä–∞–≤–æ—á–Ω–∏–∫ —Ç—Ä–∞–∫–æ–≤")
        st.text_input("tractor_no", placeholder="–Ω–∞–ø—Ä–∏–º–µ—Ä, 1740")
        st.button("‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ç—Ä–∞–∫", help="–ó–∞–≥–ª—É—à–∫–∞")
        st.markdown("<br>", unsafe_allow_html=True)
        st.dataframe(pd.DataFrame({
            "tractor_no": ["1740","1741","1742"],
            "status": ["active","active","inactive"],
        }))

    with t2:
        st.subheader("–ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –ø–µ—Ä–∏–æ–¥—ã (–¥–µ–º–æ)")
        st.dataframe(pd.DataFrame({
            "period_month": ["2025-07-01","2025-08-01","2025-09-01"],
            "files": ["5/5","4/5","2/5"],
            "status": ["complete","waiting salary","waiting fuel"]
        }))

    with t3:
        st.subheader("–õ–æ–≥–∏ –æ–ø–µ—Ä–∞—Ü–∏–π (–¥–µ–º–æ)")
        st.code("""
2025-09-01 12:03  Uploaded fuel.xlsx (32 rows)
2025-09-01 12:05  Uploaded tolls.xlsx (16 rows)
2025-09-01 12:06  Uploaded repair.xlsx (5 rows)
2025-09-01 12:08  Uploaded salary.xlsx (31 rows)
2025-09-01 12:12  Uploaded gross.xlsx (32 rows)
2025-09-01 12:13  Upsert to monthly_revenue: 32 rows
2025-09-01 12:13  Upsert to variable_item: fuel=32, tolls=16, repair=5, salary=31
        """)
